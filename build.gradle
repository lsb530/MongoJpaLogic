plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1'
sourceCompatibility = '17'
buildDir = 'build'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('snakeyaml.version','1.33')
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
//    implementation 'org.apache.commons:commons-text:1.10.0'
//    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.1'
    implementation 'org.json:json:20220924'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.session:spring-session-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    compileOnly 'org.projectlombok:lombok:1.18.24'

    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    archiveFileName = 'backbone-plain.jar'
}

bootJar {
    archiveFileName = 'backbone.jar'
}
